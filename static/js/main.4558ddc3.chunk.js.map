{"version":3,"sources":["components/task01/messages.module.css","components/task02/listOfTasks.module.css","components/navBar.module.css","components/task03/Counter.module.css","components/common/myInput.module.css","components/common/MyInput.tsx","components/common/CustomButton.tsx","components/task03/Counter.tsx","components/task01/MessageItem.tsx","components/task01/Messages.tsx","components/task02/TasksList.tsx","components/task02/listOfTasksHOC.tsx","components/common/CustomCheckboxContainer.tsx","components/task04/ShowCustomCompoents.tsx","components/NavBar.tsx","components/common/EditableSpan/EditableSpan.tsx","components/common/EditableSpan/EditableSpanContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MyInput","props","className","s","text_field","TextField","variant","value","onChange","e","currentValue","currentTarget","undefined","CustomButton","Button","onClick","Counter","useState","name","setName","setValue","increaseValue","id","uuidv4","alert","content","content__inner","content__text","length","content__input","onKeyPress","currentKey","MessageItem","style","content__wrapper","content__wrapper_img","src","alt","content__wrapper_item","content__wrapper_item_message","content__wrapper_item_messageName","content__wrapper_item_messageText","message","content__wrapper_item_time","time","Messages","map","m","key","TasksList","content__tasks","content__title","list","tasks","t","title","IconButton","aria-label","removeTask","fontSize","content__buttons","filterTasks","ListOfTasksHOC","priority","state","setState","taskFilter","setTaskFilter","filtredTasks","filter","titleId","copy","prior","CustomCheckbox","Checkbox","checked","isChecked","ShowCustomComponents","NavBar","arrayOfLinks","link","activeClass","menu","menu_active","wrapper","menu_btn","menu_list","el","to","EditableSpan","editMode","setEditeMode","onDoubleClick","onBlur","autoFocus","EditableSpanContainer","App","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4558ddc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"messages_content__NngSf\",\"content__wrapper\":\"messages_content__wrapper__1yd_B\",\"content__wrapper_img\":\"messages_content__wrapper_img__3g_Tq\",\"content__wrapper_item\":\"messages_content__wrapper_item__7BiBU\",\"content__wrapper_item_time\":\"messages_content__wrapper_item_time__1311m\",\"content__wrapper_item_message\":\"messages_content__wrapper_item_message__3uMZj\",\"content__wrapper_item_messageName\":\"messages_content__wrapper_item_messageName__3wBSM\",\"content__wrapper_item_messageText\":\"messages_content__wrapper_item_messageText__QQvkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"listOfTasks_content__2WJK-\",\"content__tasks\":\"listOfTasks_content__tasks__2tv--\",\"content__title\":\"listOfTasks_content__title__1kyt_\",\"list\":\"listOfTasks_list__2p6e5\",\"content__buttons\":\"listOfTasks_content__buttons__19pKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"navBar_wrapper__Hi6_V\",\"menu\":\"navBar_menu__ditQ0\",\"menu_active\":\"navBar_menu_active__eRNoR\",\"menu_list\":\"navBar_menu_list__3ylic\",\"menu_btn\":\"navBar_menu_btn__2TT7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Counter_content__ZuwO5\",\"content__inner\":\"Counter_content__inner__34QDE\",\"content__text\":\"Counter_content__text__3IBgV\",\"content__input\":\"Counter_content__input__2Xft5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_field\":\"myInput_text_field__3Q-JL\"};","import React, { ChangeEvent, KeyboardEvent } from \"react\";\r\nimport s from './myInput.module.css';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\ntype MyInputPropsType = {\r\n    value?: string,\r\n    onChange?: (value: string) => void\r\n    onKeyPress? : (currentKey:number) => void\r\n}\r\n\r\nexport const MyInput: React.FC<MyInputPropsType> = (props) => {\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const currentValue = e.currentTarget.value\r\n\r\n        const unvalidConditions = (currentValue !== undefined && currentValue !== null)\r\n\r\n        if(unvalidConditions && props.onChange){\r\n            props.onChange(currentValue)\r\n        }\r\n    }\r\n\r\n    const onKeyPress = (e:KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.charCode && props.onKeyPress){\r\n            props.onKeyPress(e.charCode)\r\n        }\r\n    }\r\n\r\n    return <div className={s.text_field}>\r\n        <TextField  variant=\"outlined\"  value={props.value} onChange={onChange} />\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\ntype CustomButtonPropsType = {\r\n    value?: string\r\n    onClick?: () => void\r\n}\r\n\r\nexport const CustomButton: React.FC<CustomButtonPropsType> = (props) => {\r\n\r\n    const onClick = () => {\r\n        if (props.onClick) {\r\n            props.onClick()\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Button variant=\"contained\" onClick={onClick}>{props.value}</Button>\r\n    </>\r\n}","import React, {useState} from \"react\";\r\nimport s from './Counter.module.css'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport {MyInput} from \"../common/MyInput\";\r\nimport { CustomButton } from \"../common/CustomButton\";\r\n\r\ntype DataObjType = {\r\n    id: string\r\n    name: string | number\r\n}\r\n\r\nexport const Counter = () => {\r\n\r\n\r\n    let [name, setName] = useState<string>('')\r\n    let [value, setValue] = useState<Array<DataObjType>>([])\r\n\r\n    const increaseValue = () => {\r\n        if (name) {\r\n            setValue([...value, {id: uuidv4(), name}])\r\n            alert(`Hello, ${name}`)\r\n        }\r\n        setName('')\r\n    }\r\n\r\n\r\n    const onKeyPress = (currentKey: number) => {\r\n        if (currentKey === 13) {\r\n            increaseValue();\r\n        }\r\n\r\n    }\r\n\r\n    const changeInputValue = (currentValue:string): void => {\r\n        setName(currentValue)\r\n    }\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.content__inner}>\r\n            <div className={s.content__text}>\r\n                <span>{value.length}</span>\r\n            </div>\r\n            <div className={s.content__input}>\r\n                <span>Enter your name:</span>\r\n                <MyInput value={name} onChange={changeInputValue} onKeyPress={onKeyPress}/>\r\n                <CustomButton onClick={increaseValue} value={'increase'}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport style from './messages.module.css'\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    time: string,\r\n    message: string\r\n}\r\n\r\nexport const MessageItem: React.FC<PropsType> = (props) => {\r\n    return <div className={style.content}>\r\n        <div className={style.content__wrapper}>\r\n            <div className={style.content__wrapper_img}>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSebA8fFnNGT1sxNPZ882iVMNpbng0j_hdBZQ&usqp=CAU\"\r\n                    alt=\"\"/>\r\n            </div>\r\n            <div className={style.content__wrapper_item}>\r\n                <div className={style.content__wrapper_item_message}>\r\n                    <div className={style.content__wrapper_item_messageName}>\r\n                        <p>{props.name}</p>\r\n                    </div>\r\n                    <div className={style.content__wrapper_item_messageText}>\r\n                        <p>{props.message}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={style.content__wrapper_item_time}>\r\n                    <p>{props.time}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {MessageItem} from \"./MessageItem\";\r\n\r\n\r\nexport const Messages = () => {\r\n    //type for MessageItem\r\n    type messageItemType = {\r\n        id:number,\r\n        name: string,\r\n        message: string,\r\n        time: string\r\n    }\r\n\r\n    //data for MessageItem\r\n    const messages:Array<messageItemType> = [\r\n        {id:1, name: \"Masha\", message: 'Did you buy that i asked?', time: \"10:39\"}\r\n    ]\r\n\r\n    return <>\r\n        {messages.map((m) => <MessageItem key={m.id} name={m.name} message={m.message} time={m.time} /> )}\r\n    </>\r\n}\r\n","import React from \"react\";\r\nimport style from './listOfTasks.module.css'\r\nimport {priorityTasks, tasksListType} from \"./listOfTasksHOC\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\ntype propsType = {\r\n    tasks: Array<tasksListType>\r\n    removeTask: (titleId: number) => void\r\n    filterTasks: (prior: priorityTasks) => void\r\n}\r\n\r\nexport const TasksList: React.FC<propsType> = (props) => {\r\n\r\n    const filterTaskHigh = () => props.filterTasks(\"high\")\r\n    const filterTaskMedium = () => props.filterTasks(\"medium\")\r\n    const filterTaskLow = () => props.filterTasks(\"low\")\r\n    const filterTaskAll = () => props.filterTasks(\"all\")\r\n\r\n\r\n\r\n    return <>\r\n        <div className={style.content__tasks}>\r\n            <div className={style.content__title}>\r\n                <h3>List of tasks at a day</h3>\r\n            </div>\r\n            <ul id={style.list}>\r\n                {props.tasks.map((t) => {\r\n\r\n                    const removeTask = () => {\r\n                        props.removeTask(t.id)\r\n                    }\r\n\r\n                    return <>\r\n                        <li key={t.id}>\r\n                            {t.title}\r\n                            <IconButton aria-label=\"delete\"  onClick={removeTask}>\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton >\r\n                        </li>\r\n\r\n                    </>\r\n                })}\r\n            </ul>\r\n        </div>\r\n        <div className={style.content__buttons}>\r\n            <CustomButton value={'all'} onClick={filterTaskAll} />\r\n            <CustomButton value={'low'} onClick={filterTaskLow} />\r\n            <CustomButton value={'medium'} onClick={filterTaskMedium} />\r\n            <CustomButton value={'high'} onClick={filterTaskHigh} />\r\n        </div>\r\n    </>\r\n}","import React, {useState} from \"react\";\r\nimport style from './listOfTasks.module.css'\r\nimport {TasksList} from \"./TasksList\";\r\n\r\nexport type tasksListType = {\r\n    id: number\r\n    title: string\r\n    priority: string\r\n}\r\n\r\nexport type priorityTasks = \"all\" | \"low\" | \"medium\" | \"high\"\r\n\r\nexport const ListOfTasksHOC = () => {\r\n\r\n    let [state, setState] = useState<Array<tasksListType>>([\r\n        {id: 1, title: \"Работа\", priority: \"high\"},\r\n        {id: 2, title: \"Уборка\", priority: \"medium\"},\r\n        {id: 3, title: \"Посмотреть новую серию Сайтамы\", priority: \"high\"},\r\n        {id: 4, title: \"Почитать новую книгу Донцовой\", priority: \"low\"}]);\r\n\r\n    //for filter of tasks by click on a button\r\n    let [taskFilter, setTaskFilter] = useState<priorityTasks>(\"all\")\r\n\r\n    let filtredTasks = state\r\n\r\n    if (taskFilter === \"low\") {\r\n        filtredTasks = filtredTasks.filter((t) => t.priority === \"low\")\r\n    }\r\n    if (taskFilter === \"medium\") {\r\n        filtredTasks = filtredTasks.filter((t) => t.priority === \"medium\")\r\n    }\r\n    if (taskFilter === \"high\") {\r\n        filtredTasks = filtredTasks.filter((t) => t.priority === \"high\")\r\n    }\r\n\r\n\r\n    const removeTask = (titleId: number) => {\r\n        let copy = [...state]\r\n        copy = copy.filter((t) => t.id !== titleId)\r\n        setState(copy)\r\n    }\r\n\r\n    const filterTasks = (prior: priorityTasks) => {\r\n        setTaskFilter(prior)\r\n    }\r\n\r\n    return <div className={style.content}>\r\n        <TasksList tasks={filtredTasks}\r\n                   removeTask={removeTask} filterTasks={filterTasks}/>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\n\r\n\r\nexport const CustomCheckboxContainer = () => {\r\n\r\n    const [value, setValue] = useState<boolean>(false)\r\n\r\n    const onChange = (value: boolean) => {\r\n        setValue(value)\r\n    }\r\n\r\n    return <>\r\n        <CustomCheckbox isChecked={value} onChange={onChange}/>\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\ntype CustomCheckboxPropsType = {\r\n    isChecked?: boolean,\r\n    onChange?: (value: boolean) => void\r\n}\r\n\r\nexport const CustomCheckbox: React.FC<CustomCheckboxPropsType> = (props) => {\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.checked\r\n\r\n        const unvalidConditions = (value !== undefined && value !== null)\r\n\r\n        if (unvalidConditions && props.onChange) {\r\n            props.onChange(value)\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Checkbox checked={props.isChecked} onChange={onChange}/>\r\n    </>\r\n}","import React from \"react\";\r\nimport {MyInput} from \"../common/MyInput\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport {CustomCheckbox} from \"../common/CustomCheckboxContainer\";\r\n\r\nexport const ShowCustomComponents = () => {\r\n    return <>\r\n        <MyInput/>\r\n        <CustomButton value={'default'}/>\r\n        <CustomCheckbox/>\r\n    </>\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {v4 as id} from 'uuid';\r\nimport s from './navBar.module.css';\r\n\r\ntype ArrayOfLinksType = {\r\n    id: string,\r\n    link: string\r\n}\r\n\r\nexport const NavBar = () => {\r\n\r\n    const arrayOfLinks: Array<ArrayOfLinksType> = [{id: id(), link: 'pre-junior'},\r\n        {id: id(), link: 'junior'},\r\n        {id: id(), link: 'junior-plus'}\r\n    ]\r\n\r\n    const [value, setValue] = useState<boolean>(false)\r\n\r\n    const toggleValue = () => {\r\n        setValue(!value)\r\n    }\r\n\r\n    const activeClass = (value) ? `${s.menu} ${s.menu_active}` : `${s.menu}`\r\n\r\n    return <div className={s.wrapper}>\r\n        <div className={activeClass}>\r\n            <button className={s.menu_btn} onClick={toggleValue}>\r\n                <span></span>\r\n            </button>\r\n            <nav className={s.menu_list}>\r\n                {arrayOfLinks.map(el => {\r\n                    return <NavLink key={el.id} to={el.link}>{el.link}</NavLink>\r\n                })}\r\n            </nav>\r\n        </div>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './editableSpan.module.css'\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype EditableSpanType = {\r\n    value?: string\r\n    onChange?: (value: string) => void\r\n}\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = (props) => {\r\n\r\n    const [editMode, setEditeMode] = useState<boolean>(true)\r\n\r\n    const onDoubleClick = () => {\r\n        setEditeMode(false)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setEditeMode(true)\r\n    }\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const currentValue = e.currentTarget.value;\r\n\r\n        const unvalidConditions = (currentValue !== undefined && currentValue !== null)\r\n\r\n        if (unvalidConditions && props.onChange) {\r\n            props.onChange(currentValue)\r\n        }\r\n    }\r\n\r\n\r\n    return <div className={s.content}>\r\n        {\r\n            (editMode) ? <span onDoubleClick={onDoubleClick}>{props.value}</span> :\r\n                <TextField value={props.value} onChange={onChange} onBlur={onBlur} autoFocus={true}/>\r\n        }\r\n    </div>\r\n\r\n}","import React, {useState} from \"react\";\r\nimport { EditableSpan } from \"./EditableSpan\";\r\n\r\n\r\nexport const EditableSpanContainer = () => {\r\n\r\n    const [value, setValue] = useState<string>('Please, don\\'t click by this field twice')\r\n\r\n    const onChange = (currentValue:string) => {\r\n        setValue(currentValue)\r\n    }\r\n\r\n\r\n    return <EditableSpan onChange={onChange} value={value} />\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport {Counter} from './components/task03/Counter';\nimport {Messages} from \"./components/task01/Messages\";\nimport {ListOfTasksHOC} from './components/task02/listOfTasksHOC';\nimport {ShowCustomComponents} from './components/task04/ShowCustomCompoents';\nimport {NavBar} from './components/NavBar';\nimport {Route} from 'react-router-dom';\nimport { EditableSpanContainer } from './components/common/EditableSpan/EditableSpanContainer';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NavBar/>\n            <Route path={'/pre-junior'} render={() => <Messages/>}/>\n            <Route path={'/pre-junior'} render={() => <ListOfTasksHOC/>}/>\n            <Route path={'/pre-junior'} render={() => <Counter/>}/>\n            <Route path={'/pre-junior'} render={() => <ShowCustomComponents/>}/>\n            <Route path={'/junior'} render={() => <EditableSpanContainer />}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}